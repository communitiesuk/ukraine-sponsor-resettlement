name: "Deploy Pipeline"

on:
  pull_request:
  push:
    branches:
      - master
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13.5
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: ukraine
          POSTGRES_DB: ukraine
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        # tmpfs makes DB faster by using RAM
        options: >-
          --mount type=tmpfs,destination=/var/lib/postgresql/data
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      RAILS_ENV: test
      INSTANCE_NAME: ukraine-sponsor-resettlement-test
      VCAP_SERVICES: '{"redis":[{"instance_name":"ukraine-sponsor-resettlement-test-redis","credentials":{"uri":"redis://redis"}}],"aws-s3-bucket":[{"instance_name":"ukraine-sponsor-resettlement-test-s3","credentials":{"aws_access_key_id":"access-key-id","aws_secret_access_key":"secret-access-key","aws_region":"eu-west-2","bucket_name":"test-bucket"}}]}'
      GEMFILE_RUBY_VERSION: 3.1.4
      DB_HOST: localhost
      DB_DATABASE: ukraine
      DB_USERNAME: ukraine
      DB_PASSWORD: password
      GOVUK_NOTIFY_API_KEY: ${{ secrets.GOVUK_NOTIFY_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          # runs 'bundle install' and caches installed gems automatically
          bundler-cache: true
      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Create DB
        run: |
          bundle exec rake db:prepare
      - name: Migrate DB
        run: |
          bundle exec rake db:migrate
      - name: Compile Assets
        run: |
          bundle exec rake assets:precompile
      - name: Run tests
        run: |
          bundle exec rake
    #- name: Test coverage
    #    uses: joshmfrankel/simplecov-check-action@main
    #    with:
    #      github_token: ${{ secrets.GITHUB_TOKEN }}
    #      minimum_suite_coverage: 70
    #      minimum_file_coverage: 0

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          # runs 'bundle install' and caches installed gems automatically
          bundler-cache: true

      - name: Rubocop
        run: |
          bundle exec rubocop

  audit:
    name: Audit dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          # runs 'bundle install' and caches installed gems automatically
          bundler-cache: true

      - name: Audit
        run: |
          bundle exec bundler-audit

  brakeman-scan:
    name: Brakeman Scan
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      # Customize the ruby version depending on your needs
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1

      - name: Setup Brakeman
        run: |
          gem install brakeman

      # Execute Brakeman CLI and generate a SARIF output with the security issues identified during the analysis
      - name: Scan
        run: |
          brakeman --color -o /dev/stdout

  deploy-staging:
    name: Deploy Staging
    concurrency: "staging"
    runs-on: ubuntu-latest
    environment: "staging"
    if: github.ref == 'refs/heads/master'
    needs: [lint, test, audit, brakeman-scan]

    env:
      ADDITIONAL_INFO_CONFIRMATION_TEMPLATE_ID: ${{ secrets.ADDITIONAL_INFO_CONFIRMATION_TEMPLATE_ID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      BASIC_AUTH_PASS: ${{ secrets.BASIC_AUTH_PASS }}
      BASIC_AUTH_USER: ${{ secrets.BASIC_AUTH_USER }}
      CF_API_ENDPOINT: ${{ secrets.CF_API_ENDPOINT }}
      CF_ORG: ${{ secrets.CF_ORG }}
      CF_PASSWORD: ${{ secrets.CF_PASSWORD }} # Used by cf auth (https://cli.cloudfoundry.org/en-US/v6/auth.html)
      CF_SPACE: ${{ secrets.CF_SPACE }}
      CF_USERNAME: ${{ secrets.CF_USERNAME }} # Used by cf auth (https://cli.cloudfoundry.org/en-US/v6/auth.html)
      CONSENT_UPLOAD_PASS: ${{ secrets.CONSENT_UPLOAD_PASS }}
      CONSENT_UPLOAD_USER: ${{ secrets.CONSENT_UPLOAD_USER }}
      EOI_GA_TRACKING_CODE: ${{ secrets.EOI_GA_TRACKING_CODE }}
      EOI_GA4_TRACKING_CODE: ${{ secrets.EOI_GA4_TRACKING_CODE }}
      GOVUK_NOTIFY_API_KEY: ${{ secrets.GOVUK_NOTIFY_API_KEY }}
      INDIVIDUAL_CONFIRMATION_TEMPLATE_ID: ${{ secrets.INDIVIDUAL_CONFIRMATION_TEMPLATE_ID }}
      ORGANISATION_CONFIRMATION_TEMPLATE_ID: ${{ secrets.ORGANISATION_CONFIRMATION_TEMPLATE_ID }}
      EXPRESSION_OF_INTEREST_CONFIRMATION_TEMPLATE_ID: ${{ secrets.EXPRESSION_OF_INTEREST_CONFIRMATION_TEMPLATE_ID }}
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      REMOTE_API_TOKEN: ${{ secrets.REMOTE_API_TOKEN }}
      REMOTE_API_TOKEN_UAM: ${{ secrets.REMOTE_API_TOKEN_UAM }}
      REMOTE_API_URL: ${{ secrets.REMOTE_API_URL }}
      SAVE_AND_RETURN_TEMPLATE_ID: ${{ secrets.SAVE_AND_RETURN_TEMPLATE_ID }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      SPONSOR_CONFIRMATION_TEMPLATE_ID: ${{ secrets.SPONSOR_CONFIRMATION_TEMPLATE_ID }}
      UAM_FILE_UPLOAD_API_TOKEN: ${{ secrets.UAM_FILE_UPLOAD_API_TOKEN }}
      UAM_FILE_UPLOAD_API_URL: ${{ secrets.UAM_FILE_UPLOAD_API_URL }}
      UAM_FOUNDRY_ATTACHMENT_ASSIGN_API_URL: ${{ secrets.UAM_FOUNDRY_ATTACHMENT_ASSIGN_API_URL }}
      UAM_GA_TRACKING_CODE: ${{ secrets.UAM_GA_TRACKING_CODE }}
      UAM_GA4_TRACKING_CODE: ${{ secrets.UAM_GA4_TRACKING_CODE }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Cloud Foundry CLI
        run: |
          wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
          echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
          sudo apt-get update
          sudo apt-get install cf8-cli

      - name: Deploy App
        env:
          APP_NAME: ukraine-sponsor-resettlement-staging
          GOVUK_NOTIFY_SMS_API_KEY: ${{ secrets.GOVUK_NOTIFY_SMS_API_KEY }}

        run: |
          cf api $CF_API_ENDPOINT
          cf auth
          cf target -o $CF_ORG -s $CF_SPACE
          cf set-env $APP_NAME ADDITIONAL_INFO_CONFIRMATION_TEMPLATE_ID $ADDITIONAL_INFO_CONFIRMATION_TEMPLATE_ID
          cf set-env $APP_NAME AWS_ACCESS_KEY_ID $AWS_ACCESS_KEY_ID
          cf set-env $APP_NAME AWS_BUCKET_NAME $AWS_BUCKET_NAME
          cf set-env $APP_NAME AWS_SECRET_ACCESS_KEY $AWS_SECRET_ACCESS_KEY
          cf set-env $APP_NAME BASIC_AUTH_PASS $BASIC_AUTH_PASS
          cf set-env $APP_NAME BASIC_AUTH_USER $BASIC_AUTH_USER
          cf set-env $APP_NAME CONSENT_UPLOAD_PASS $CONSENT_UPLOAD_PASS
          cf set-env $APP_NAME CONSENT_UPLOAD_USER $CONSENT_UPLOAD_USER
          cf set-env $APP_NAME EOI_GA_TRACKING_CODE $EOI_GA_TRACKING_CODE
          cf set-env $APP_NAME EOI_GA4_TRACKING_CODE $EOI_GA4_TRACKING_CODE
          cf set-env $APP_NAME GOVUK_NOTIFY_API_KEY $GOVUK_NOTIFY_API_KEY
          cf set-env $APP_NAME GOVUK_NOTIFY_SMS_API_KEY $GOVUK_NOTIFY_SMS_API_KEY
          cf set-env $APP_NAME INDIVIDUAL_CONFIRMATION_TEMPLATE_ID $INDIVIDUAL_CONFIRMATION_TEMPLATE_ID
          cf set-env $APP_NAME ORGANISATION_CONFIRMATION_TEMPLATE_ID $ORGANISATION_CONFIRMATION_TEMPLATE_ID
          cf set-env $APP_NAME EXPRESSION_OF_INTEREST_CONFIRMATION_TEMPLATE_ID $EXPRESSION_OF_INTEREST_CONFIRMATION_TEMPLATE_ID
          cf set-env $APP_NAME RAILS_MASTER_KEY $RAILS_MASTER_KEY
          cf set-env $APP_NAME REMOTE_API_TOKEN $REMOTE_API_TOKEN
          cf set-env $APP_NAME REMOTE_API_TOKEN_UAM $REMOTE_API_TOKEN_UAM
          cf set-env $APP_NAME REMOTE_API_URL $REMOTE_API_URL
          cf set-env $APP_NAME SAVE_AND_RETURN_TEMPLATE_ID $SAVE_AND_RETURN_TEMPLATE_ID
          cf set-env $APP_NAME SENTRY_DSN $SENTRY_DSN
          cf set-env $APP_NAME SPONSOR_CONFIRMATION_TEMPLATE_ID $SPONSOR_CONFIRMATION_TEMPLATE_ID
          cf set-env $APP_NAME UAM_FILE_UPLOAD_API_TOKEN $UAM_FILE_UPLOAD_API_TOKEN
          cf set-env $APP_NAME UAM_FILE_UPLOAD_API_URL $UAM_FILE_UPLOAD_API_URL
          cf set-env $APP_NAME UAM_FOUNDRY_ATTACHMENT_ASSIGN_API_URL $UAM_FOUNDRY_ATTACHMENT_ASSIGN_API_URL
          cf set-env $APP_NAME UAM_GA_TRACKING_CODE $UAM_GA_TRACKING_CODE
          cf set-env $APP_NAME UAM_GA4_TRACKING_CODE $UAM_GA4_TRACKING_CODE
          cf push -f web-manifest.yml $APP_NAME --strategy rolling --no-wait

      - name: Deploy Sidekiq
        env:
          APP_NAME: ukraine-sponsor-resettlement-staging-sidekiq
          INSTANCE_NAME: ukraine-sponsor-resettlement-staging

        run: |
          cf api $CF_API_ENDPOINT
          cf auth
          cf target -o $CF_ORG -s $CF_SPACE
          cf set-env $APP_NAME ADDITIONAL_INFO_CONFIRMATION_TEMPLATE_ID $ADDITIONAL_INFO_CONFIRMATION_TEMPLATE_ID
          cf set-env $APP_NAME AWS_ACCESS_KEY_ID $AWS_ACCESS_KEY_ID
          cf set-env $APP_NAME AWS_BUCKET_NAME $AWS_BUCKET_NAME
          cf set-env $APP_NAME AWS_SECRET_ACCESS_KEY $AWS_SECRET_ACCESS_KEY
          cf set-env $APP_NAME BASIC_AUTH_PASS $BASIC_AUTH_PASS
          cf set-env $APP_NAME BASIC_AUTH_USER $BASIC_AUTH_USER
          cf set-env $APP_NAME CONSENT_UPLOAD_PASS $CONSENT_UPLOAD_PASS
          cf set-env $APP_NAME CONSENT_UPLOAD_USER $CONSENT_UPLOAD_USER
          cf set-env $APP_NAME EOI_GA_TRACKING_CODE $EOI_GA_TRACKING_CODE
          cf set-env $APP_NAME EOI_GA4_TRACKING_CODE $EOI_GA4_TRACKING_CODE
          cf set-env $APP_NAME GOVUK_NOTIFY_API_KEY $GOVUK_NOTIFY_API_KEY
          cf set-env $APP_NAME INDIVIDUAL_CONFIRMATION_TEMPLATE_ID $INDIVIDUAL_CONFIRMATION_TEMPLATE_ID
          cf set-env $APP_NAME INSTANCE_NAME $INSTANCE_NAME
          cf set-env $APP_NAME MALLOC_ARENA_MAX 2
          cf set-env $APP_NAME ORGANISATION_CONFIRMATION_TEMPLATE_ID $ORGANISATION_CONFIRMATION_TEMPLATE_ID
          cf set-env $APP_NAME EXPRESSION_OF_INTEREST_CONFIRMATION_TEMPLATE_ID $EXPRESSION_OF_INTEREST_CONFIRMATION_TEMPLATE_ID
          cf set-env $APP_NAME RAILS_MASTER_KEY $RAILS_MASTER_KEY
          cf set-env $APP_NAME REMOTE_API_TOKEN $REMOTE_API_TOKEN
          cf set-env $APP_NAME REMOTE_API_TOKEN_UAM $REMOTE_API_TOKEN_UAM
          cf set-env $APP_NAME REMOTE_API_URL $REMOTE_API_URL
          cf set-env $APP_NAME SAVE_AND_RETURN_TEMPLATE_ID $SAVE_AND_RETURN_TEMPLATE_ID
          cf set-env $APP_NAME SENTRY_DSN $SENTRY_DSN
          cf set-env $APP_NAME SPONSOR_CONFIRMATION_TEMPLATE_ID $SPONSOR_CONFIRMATION_TEMPLATE_ID
          cf set-env $APP_NAME UAM_FILE_UPLOAD_API_TOKEN $UAM_FILE_UPLOAD_API_TOKEN
          cf set-env $APP_NAME UAM_FILE_UPLOAD_API_URL $UAM_FILE_UPLOAD_API_URL
          cf set-env $APP_NAME UAM_FOUNDRY_ATTACHMENT_ASSIGN_API_URL $UAM_FOUNDRY_ATTACHMENT_ASSIGN_API_URL
          cf set-env $APP_NAME UAM_GA_TRACKING_CODE $UAM_GA_TRACKING_CODE
          cf set-env $APP_NAME UAM_GA4_TRACKING_CODE $UAM_GA4_TRACKING_CODE
          cf push -f worker-manifest.yml $APP_NAME --strategy rolling --no-wait

  #e2e-tests:
  #  name: E2E Tests
  #  needs: [deploy-staging]
  #  uses: ./.github/workflows/cypress-pipeline.yml

  deploy-production:
    name: Deploy Production
    concurrency: "production"
    runs-on: ubuntu-latest
    environment: "production"
    if: github.ref == 'refs/heads/master'
    needs: [deploy-staging]

    env:
      ADDITIONAL_INFO_CONFIRMATION_TEMPLATE_ID: ${{ secrets.ADDITIONAL_INFO_CONFIRMATION_TEMPLATE_ID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      CF_API_ENDPOINT: ${{ secrets.CF_API_ENDPOINT }}
      CF_ORG: ${{ secrets.CF_ORG }}
      CF_PASSWORD: ${{ secrets.CF_PASSWORD }} # Used by cf auth (https://cli.cloudfoundry.org/en-US/v6/auth.html)
      CF_SPACE: ${{ secrets.CF_SPACE }}
      CF_USERNAME: ${{ secrets.CF_USERNAME }} # Used by cf auth (https://cli.cloudfoundry.org/en-US/v6/auth.html)
      CONSENT_UPLOAD_PASS: ${{ secrets.CONSENT_UPLOAD_PASS }}
      CONSENT_UPLOAD_USER: ${{ secrets.CONSENT_UPLOAD_USER }}
      EOI_GA_TRACKING_CODE: ${{ secrets.EOI_GA_TRACKING_CODE }}
      EOI_GA4_TRACKING_CODE: ${{ secrets.EOI_GA4_TRACKING_CODE }}
      GOVUK_NOTIFY_API_KEY: ${{ secrets.GOVUK_NOTIFY_API_KEY }}
      INDIVIDUAL_CONFIRMATION_TEMPLATE_ID: ${{ secrets.INDIVIDUAL_CONFIRMATION_TEMPLATE_ID }}
      ORGANISATION_CONFIRMATION_TEMPLATE_ID: ${{ secrets.ORGANISATION_CONFIRMATION_TEMPLATE_ID }}
      EXPRESSION_OF_INTEREST_CONFIRMATION_TEMPLATE_ID: ${{ secrets.EXPRESSION_OF_INTEREST_CONFIRMATION_TEMPLATE_ID }}
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      REMOTE_API_TOKEN: ${{ secrets.REMOTE_API_TOKEN }}
      REMOTE_API_TOKEN_UAM: ${{ secrets.REMOTE_API_TOKEN_UAM }}
      REMOTE_API_URL: ${{ secrets.REMOTE_API_URL }}
      SAVE_AND_RETURN_TEMPLATE_ID: ${{ secrets.SAVE_AND_RETURN_TEMPLATE_ID }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      SPONSOR_CONFIRMATION_TEMPLATE_ID: ${{ secrets.SPONSOR_CONFIRMATION_TEMPLATE_ID }}
      UAM_FILE_UPLOAD_API_TOKEN: ${{ secrets.UAM_FILE_UPLOAD_API_TOKEN }}
      UAM_FILE_UPLOAD_API_URL: ${{ secrets.UAM_FILE_UPLOAD_API_URL }}
      UAM_FOUNDRY_ATTACHMENT_ASSIGN_API_URL: ${{ secrets.UAM_FOUNDRY_ATTACHMENT_ASSIGN_API_URL }}
      UAM_GA_TRACKING_CODE: ${{ secrets.UAM_GA_TRACKING_CODE }}
      UAM_GA4_TRACKING_CODE: ${{ secrets.UAM_GA4_TRACKING_CODE }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Cloud Foundry CLI
        run: |
          wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
          echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
          sudo apt-get update
          sudo apt-get install cf8-cli

      - name: Deploy App
        env:
          APP_NAME: ukraine-sponsor-resettlement-production
          GOVUK_NOTIFY_SMS_API_KEY: ${{ secrets.GOVUK_NOTIFY_SMS_API_KEY }}

        run: |
          cf api $CF_API_ENDPOINT
          cf auth
          cf target -o $CF_ORG -s $CF_SPACE
          cf set-env $APP_NAME ADDITIONAL_INFO_CONFIRMATION_TEMPLATE_ID $ADDITIONAL_INFO_CONFIRMATION_TEMPLATE_ID
          cf set-env $APP_NAME AWS_ACCESS_KEY_ID $AWS_ACCESS_KEY_ID
          cf set-env $APP_NAME AWS_BUCKET_NAME $AWS_BUCKET_NAME
          cf set-env $APP_NAME AWS_SECRET_ACCESS_KEY $AWS_SECRET_ACCESS_KEY
          cf set-env $APP_NAME CONSENT_UPLOAD_PASS $CONSENT_UPLOAD_PASS
          cf set-env $APP_NAME CONSENT_UPLOAD_USER $CONSENT_UPLOAD_USER
          cf set-env $APP_NAME EOI_GA_TRACKING_CODE $EOI_GA_TRACKING_CODE
          cf set-env $APP_NAME EOI_GA4_TRACKING_CODE $EOI_GA4_TRACKING_CODE
          cf set-env $APP_NAME GOVUK_NOTIFY_API_KEY $GOVUK_NOTIFY_API_KEY
          cf set-env $APP_NAME GOVUK_NOTIFY_SMS_API_KEY $GOVUK_NOTIFY_SMS_API_KEY
          cf set-env $APP_NAME INDIVIDUAL_CONFIRMATION_TEMPLATE_ID $INDIVIDUAL_CONFIRMATION_TEMPLATE_ID
          cf set-env $APP_NAME ORGANISATION_CONFIRMATION_TEMPLATE_ID $ORGANISATION_CONFIRMATION_TEMPLATE_ID
          cf set-env $APP_NAME EXPRESSION_OF_INTEREST_CONFIRMATION_TEMPLATE_ID $EXPRESSION_OF_INTEREST_CONFIRMATION_TEMPLATE_ID
          cf set-env $APP_NAME RAILS_MASTER_KEY $RAILS_MASTER_KEY
          cf set-env $APP_NAME REMOTE_API_TOKEN $REMOTE_API_TOKEN
          cf set-env $APP_NAME REMOTE_API_TOKEN_UAM $REMOTE_API_TOKEN_UAM
          cf set-env $APP_NAME REMOTE_API_URL $REMOTE_API_URL
          cf set-env $APP_NAME SAVE_AND_RETURN_TEMPLATE_ID $SAVE_AND_RETURN_TEMPLATE_ID
          cf set-env $APP_NAME SENTRY_DSN $SENTRY_DSN
          cf set-env $APP_NAME SPONSOR_CONFIRMATION_TEMPLATE_ID $SPONSOR_CONFIRMATION_TEMPLATE_ID
          cf set-env $APP_NAME UAM_FILE_UPLOAD_API_TOKEN $UAM_FILE_UPLOAD_API_TOKEN
          cf set-env $APP_NAME UAM_FILE_UPLOAD_API_URL $UAM_FILE_UPLOAD_API_URL
          cf set-env $APP_NAME UAM_FOUNDRY_ATTACHMENT_ASSIGN_API_URL $UAM_FOUNDRY_ATTACHMENT_ASSIGN_API_URL
          cf set-env $APP_NAME UAM_GA_TRACKING_CODE $UAM_GA_TRACKING_CODE
          cf set-env $APP_NAME UAM_GA4_TRACKING_CODE $UAM_GA4_TRACKING_CODE
          cf push -f web-manifest.yml $APP_NAME --strategy rolling --no-wait
          cf install-plugin -r CF-Community app-autoscaler-plugin -f
          cf attach-autoscaling-policy $APP_NAME policy.json
      - name: Deploy Sidekiq
        env:
          APP_NAME: ukraine-sponsor-resettlement-production-sidekiq
          INSTANCE_NAME: ukraine-sponsor-resettlement-production

        run: |
          cf api $CF_API_ENDPOINT
          cf auth
          cf target -o $CF_ORG -s $CF_SPACE
          cf set-env $APP_NAME ADDITIONAL_INFO_CONFIRMATION_TEMPLATE_ID $ADDITIONAL_INFO_CONFIRMATION_TEMPLATE_ID
          cf set-env $APP_NAME AWS_ACCESS_KEY_ID $AWS_ACCESS_KEY_ID
          cf set-env $APP_NAME AWS_BUCKET_NAME $AWS_BUCKET_NAME
          cf set-env $APP_NAME AWS_SECRET_ACCESS_KEY $AWS_SECRET_ACCESS_KEY
          cf set-env $APP_NAME CONSENT_UPLOAD_PASS $CONSENT_UPLOAD_PASS
          cf set-env $APP_NAME CONSENT_UPLOAD_USER $CONSENT_UPLOAD_USER
          cf set-env $APP_NAME EOI_GA_TRACKING_CODE $EOI_GA_TRACKING_CODE
          cf set-env $APP_NAME EOI_GA4_TRACKING_CODE $EOI_GA4_TRACKING_CODE
          cf set-env $APP_NAME GOVUK_NOTIFY_API_KEY $GOVUK_NOTIFY_API_KEY
          cf set-env $APP_NAME INDIVIDUAL_CONFIRMATION_TEMPLATE_ID $INDIVIDUAL_CONFIRMATION_TEMPLATE_ID
          cf set-env $APP_NAME INSTANCE_NAME $INSTANCE_NAME
          cf set-env $APP_NAME MALLOC_ARENA_MAX 2
          cf set-env $APP_NAME ORGANISATION_CONFIRMATION_TEMPLATE_ID $ORGANISATION_CONFIRMATION_TEMPLATE_ID
          cf set-env $APP_NAME EXPRESSION_OF_INTEREST_CONFIRMATION_TEMPLATE_ID $EXPRESSION_OF_INTEREST_CONFIRMATION_TEMPLATE_ID
          cf set-env $APP_NAME RAILS_MASTER_KEY $RAILS_MASTER_KEY
          cf set-env $APP_NAME REMOTE_API_TOKEN $REMOTE_API_TOKEN
          cf set-env $APP_NAME REMOTE_API_TOKEN_UAM $REMOTE_API_TOKEN_UAM
          cf set-env $APP_NAME REMOTE_API_URL $REMOTE_API_URL
          cf set-env $APP_NAME SAVE_AND_RETURN_TEMPLATE_ID $SAVE_AND_RETURN_TEMPLATE_ID
          cf set-env $APP_NAME SENTRY_DSN $SENTRY_DSN
          cf set-env $APP_NAME SPONSOR_CONFIRMATION_TEMPLATE_ID $SPONSOR_CONFIRMATION_TEMPLATE_ID
          cf set-env $APP_NAME UAM_FILE_UPLOAD_API_TOKEN $UAM_FILE_UPLOAD_API_TOKEN
          cf set-env $APP_NAME UAM_FILE_UPLOAD_API_URL $UAM_FILE_UPLOAD_API_URL
          cf set-env $APP_NAME UAM_FOUNDRY_ATTACHMENT_ASSIGN_API_URL $UAM_FOUNDRY_ATTACHMENT_ASSIGN_API_URL
          cf set-env $APP_NAME UAM_GA_TRACKING_CODE $UAM_GA_TRACKING_CODE
          cf set-env $APP_NAME UAM_GA4_TRACKING_CODE $UAM_GA4_TRACKING_CODE
          cf push -f worker-manifest.yml $APP_NAME --strategy rolling --no-wait
